package com.einsteinford.kkweather.db;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.einsteinford.kkweather.bean.Update;
import com.einsteinford.kkweather.bean.Basic;

import com.einsteinford.kkweather.db.UpdateDao;
import com.einsteinford.kkweather.db.BasicDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig updateDaoConfig;
    private final DaoConfig basicDaoConfig;

    private final UpdateDao updateDao;
    private final BasicDao basicDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        updateDaoConfig = daoConfigMap.get(UpdateDao.class).clone();
        updateDaoConfig.initIdentityScope(type);

        basicDaoConfig = daoConfigMap.get(BasicDao.class).clone();
        basicDaoConfig.initIdentityScope(type);

        updateDao = new UpdateDao(updateDaoConfig, this);
        basicDao = new BasicDao(basicDaoConfig, this);

        registerDao(Update.class, updateDao);
        registerDao(Basic.class, basicDao);
    }
    
    public void clear() {
        updateDaoConfig.clearIdentityScope();
        basicDaoConfig.clearIdentityScope();
    }

    public UpdateDao getUpdateDao() {
        return updateDao;
    }

    public BasicDao getBasicDao() {
        return basicDao;
    }

}
